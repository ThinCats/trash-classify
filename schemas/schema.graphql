scalar Upload
schema {
  query: Query
  mutation: Mutation
}
type Query {
  trash(name: String!): Trash!
  trashList(trashNameList: [String!]!): [Trash!]!
}

type Trash {
  type: TrashType!
  name: String! 
  id: ID! 
  extraInfo: TrashExtraInfo!
}

type TrashExtraInfo {
  degration: DegrateInfo!
}

type HTMLType {
  src: String! 
  js: [String!]!
  css: [String!]!
}

type TrashType {
  name: String! 
}

type DegrateInfo {
  # time is second
  degrateTime: Int!
  degrateBy: [String!]!
}

type ImagePosition {
  width: Float 
  height: Float 
  top: Float 
  left: Float 
}

type Mutation {
  # image is with base64 encoded
  uploadImageByURL(imgURL: String): UploadImageResponse!
  uploadImageByFile(imgFile: Upload!): UploadImageResponse!
  uploadImage(imgFile: Upload!): FileType!
}

type FileType {
  filename: String
  mimetype: String
}

type TaggedImageResult {
  keyword: String 
  score: Float 
  root: String 
}

type UploadImageResponse {
  taggedImageResult: [TaggedImageResult!]!
  taggedImagePosition: ImagePosition!
}
